use crate::{
    keccak::{keccak_256, KeccakHasher},
    EIP1186Layout, StorageProof,
};
use hex_literal::hex;
use primitive_types::{H256, U256};
use rlp::{Decodable, Rlp};
use rlp_derive::RlpDecodable;
use trie_db::{Trie, TrieDBBuilder};

/// The ethereum account stored in the global state trie.
#[derive(RlpDecodable, Debug)]
struct Account {
    nonce: u64,
    balance: U256,
    storage_root: H256,
    code_hash: H256,
}

#[test]
fn test_can_verify_eip_1186_account_proofs() {
    // source?: https://freedium.cfd/https://medium.com/@chiqing/eip-1186-explained-the-standard-for-getting-account-proof-444bc1e12e03
    let key = keccak_256(&hex!("b856af30b938b6f52e5bff365675f358cd52f91b"));
    let proof = vec![
        hex!("f90211a021162657aa1e0af5eef47130ffc3362cb675ebbccfc99ee38ef9196144623507a073dec98f4943e2ab00f5751c23db67b65009bb3cb178d33f5aa93f0c08d583dda0d85b4e33773aaab742db880f8b64ea71f348c6eccb0a56854571bbd3db267f24a0bdcca489de03a49f109c1a2e7d3bd4e644d72de38b7b26dca2f8d3f112110c6fa05c7e8fdff6de07c4cb9ca6bea487a6e5be04af538c25480ce30761901b17e4bfa0d9891f4870e745509cfe17a31568f870b367a36329c892f1b2a37bf59e547183a0af08f747d2ea66efa5bcd03729a95f56297ef9b1e8533ac0d3c7546ebefd2418a0a107595919d4b102afaa0d9b91d9f554f83f0ad61a1e04487e5091543eb81db8a0a0725da6da3b62f88fc573a3fd0dd9dea9cba1750786021da836fd95b7295636a0fd7a768700af3caadaf52a08a23ab0b71ca52830f2b88b1a6b23a52f9ee05507a059434ae837706d7d317e4f7d03cd91f94ed0465fa8b99eaf18ca363bb318c7b3a09e9b831a5f59b781efd5dae8bea30bfd81b9fd5ea231d6b7e82da495c95dd35da0e72d02a01ed9bc928d94cad59ae0695f45120b7fbdbce43a2239a7e5bc81f731a0184bfb9a4051cbaa79917183d004c8d574d7ed5becaf9614c650ed40e8d123d9a0fa4797dc4a35af07f1cd6955318e3ff59578d4df32fd2174ed35f6c4db3471f9a0fec098d1fee8e975b5e78e19003699cf7cd746f47d03692d8e11c5fd58ba92a680").to_vec(),
        hex!("f90211a07fc5351578eb6ab7618a31e18c87b2b8b2703c682f2d4c1d01aaa8b53343036ea0e8871ae1828c54b9c9bbf7530890a2fe4e160fb62f72c740c7e79a756e07dbf3a04dd116a7d37146cd0ec730172fa97e84b1f13e687d56118e2d666a02a31a629fa08949d66b81ba98e5ca453ba1faf95c8476873d4c32ff6c9a2558b772c51c5768a028db2de6d80f3a06861d3acc082e3a6bb4a6948980a8e5527bd354a2da037779a09b01ba0fe0193c511161448c602bb9fff88b87ab0ded3255606a15f8bca9d348a0c1c1c6a89f2fdbee0840ff309b5cecd9764b5b5815b385576e75e235d1f04656a04e827215bb9511b3a288e33bb418132940a4d42d589b8db0f796ec917e8f9373a099398993d1d6fdd15d6082be370e4d2cc5d9870923d22770aaec9418f4b675d7a00cd1db5e131341b472af1bdf9a1bf1f1ca82bc5b280c8a50a20bcfff1ab0bdd4a09bbcc86c94be1aabf5c5ceced29f462f59103aa6dafe0fc60172bb2c549a8dbaa0902df0ba9eed7e8a6ebff2d06de8bcec5785bb98cba7606f7f40648408157ef4a0ba9dfd07c453e54504d41b7a44ea42e8220767d1e2a0e6e91ae8d5677ac70e50a0f02f2a5e26d7848f0e5a07de68cbbbd24253d545afb74aac81b35a70b6323f1ca0218b955deca7177f8f58c2da188611b333e5c7ef9212000f64ca92cd5bb6e5a0a049cd750f59e2d6f411d7b611b21b17c8eefe637ca01e1566c53f412308b34c6280").to_vec(),
        hex!("f90211a05303302919681c3ad0a56c607c9530ed910f44515f6b40c9633d1900bbbc7e0fa0459fc49e57f39ca6471b1c6905ede7eaa6d7186c8249485cc28338ba18c540cba0825307726d1b7c9d74973d37c12e8b035bf0334836e48ec3f2ff18bf2232dabea0a67ef68daba820c7d6343d1b147b73430ce5c5915a27581cfd12946c2307dc49a003c9b0f0b784de7d72f3b5d5fea87e30dc5fc6f93a0c218240f79a2c74b0f8e2a05a38ddf70df168305b8ba38e8ee54dfadc3f7d81335ec849cb143a10d9738a91a058f0692b5cb07a1c8c800fcf8a70c6e6189a5d72f24ca0040423cf450df1da44a0890dbc62e7429fcca3f1507ad2cd4799c0a7aab25db37ccad434ae23ae889807a075be60d2f635292e69dbc600600605cb8eaf75e96425fd3f2347a5c644db43b9a07b65ba06ee9d2b5dab0a9acc1b8b521cb42f91566de9c174636e817c3d990265a0de65bc6092e28b0cc1ed454fcc07ce26df21bb05efe0a4b4472ff63278e28b95a08077cd7de83428d376ff7588b32df903d2764af7d41deb9c873e9ae889823cd3a0af2f63837dc01e2efb9e40815761015a0d740c2d2549593eefd291a05d40b55aa0c3214baa8d347bd5703926b6fe3ee2f607d0debc0fd73352696dc10f4cbc517da01756cf85b4785bda4a9867a453f8ca1948f015bd329b84083f14d313bddafb80a00dac89194bc1f28d3971b9ca9d1e16a49c6383557187d7bbeb899626d60bfb1980").to_vec(),
        hex!("f90211a0bf50b49fae6cfe8b7671e3fa0c163aed76f6457720a2b7c18f567b3c02194c29a070dc71bb7e399e5ae66958261108c84b75e8aacc8d255ce28cd7c9029358872ba0d2ae86d376e65eee52338ad4a1951deb9312f2c161fdf5cfc3e36d5a07ee4239a0f2029dea5033d0e788191ba25fc25bb0570bdbbaf321dfdb076f6695c649a07ca066074b59980560ecdd8ebc96eeb93f50dc1e92983659ea4a6a61a4cff0f474cba01ad85159ddc98609ea628cd17897fe08b0d9a7bb07a2087d92a673e063039aaba04921580f8766f8f156546abd8f0e44af250b34e7323f35c40fdc078223822344a034e07b24a1c17f5dcff27b766099c206fbbb6e549d3f4c02fd8db0241061482aa0c852267182c35e2e5014ab6d656672e9446aaf79c6248d103870d55ee36368b1a00aed203f7e2684942a64f05306e57d64fd44eded94e2ce95e462be93adff640da02cea88d74264c91c546de3822b6169a427559781a774511409864d70a834706ea01d542f8a9b69674e58a5bb89fafb5e79cbe3607732455b09c2a996df48e48837a04c3bbb4f47041018455347567a4e3af472fafe179871f667c3d26038f5dabacfa03c4f12f7cdd35126ce5452aa8322bc8b497eb06c5c41741b590d40645a8fd14ea01334e9a4160b44b622e9523cb587d8ba4795bbf9ad3dd0aa1a2b7f5c6a5cbe94a08feae3d50602063d65763185633aa6e23bb47eca9a39982a4863a7cc6d3586ff80").to_vec(),
        hex!("f90211a03fc22103871f30d114942583d24adfab1ce2e651ff6705a05964318fde7c425aa01c86fd2e9d2a823db33bf4089ce1af41332b4e3069b31bb70a67861944d71688a08a90ae88b4479d21135517195f50df20fc29dbe495e09440b0fa5797fc0352c8a02a195c4a89ab6322d8daa221124274d711a9435587406addfb289f9360c0b1caa02f7ed0113a1b72febc7ceb7d9193baeaa093aebea76eea4729821f53d29b302ea07d5cbbeffd22fb0f9d510576cac47a604b2121ef8b08588eaefc46a07844515ca01c0c09d203e342fab9f80835f3aa7bb7e94cbf94d3a18b21ce905e75b690673fa07c310f931f12d1651dbb9bdffbe5e0a16db981dccfb3f4a838592e2347b1b187a091b24e00d37034ed70e0c6653f8616363efbea43be86d52aabf6a9c5d5049d3aa017cc8ab2e63508691dee64ddb2dbe5352fe531f55728368cab3d8634450730dca0d8ee92d688eabcdf28af1830d7217fcd1431c0b0e3311039c422c5f45f9d525da0abe4323ef90fb783ffd6bf29d240818b0a2477d2ad4577fce57642a5ba476957a0eee3fbc510b1a6d8da176b9eab2035837769988b216fcef67f6a215e5e261d5ea082bc27591d8b0408739712c2f0e623e3d296d12afd6b7356dae237a315a6ce3ba0634affb8f9744fed774851772cb5ce495c50212961a64262d915632c2bede721a0345017d846f3be29dca1f56a734886c26cb49d3bcbbae5f7356e55e71d84147d80").to_vec(),
        hex!("f90211a0a152d08043b3865248d8ae9c4594d6e09079f61ee4ad9afca98d3befb3a9307ca01313ea4df7ec991f5ba1b2175408765ea67111857ae25cafe21986810d633353a05cb00f30a4b6749cb8d01dda2ad665a2c570b7c6959b364c46da75fc2aebfa14a0a493d42fa40d6c8fb23090f20cebe9f1cde8a47d9594e666096c3f76219cfb34a06d2149e05ba1a31bcc352fd3a79fd42d95383f14a312862fa5f4b7b7bdb63254a0f40094679bf0599fdeecae8c800a423ad2499b67f9546d4085d5b7a351561072a05036fc625ed5a13d143fd0984e99969d2d48f962baec80b3f0e78323c8e864ffa0c0887db54ab0d4309ed5f563448bfc78a4a88c3a5473fcbd9bd263c8fcca4b9fa04287b193a315cba13a49482b4d83c068cf08b622593111e416b7a3b815e3595aa051b82224b54dc4050703157cdd6c74c618872c798badce7192fe1fd534814d5da017ac02273956b25dc2429750156e0a45bf461437bec84b784d19a5b964dd6882a05be9c25f80a6f34e9eb526d6c3c89e3ec2c5dd769d2d915d835208cac3f56d36a0ea7ae8e74baeae9d6307371f85cce46ba7ad46b5c2b3616a3573a26e1260bc31a04446678b6bf75075ae0261c179d88e49fae1d9482c214ec8c693239b583a6b18a09ec91d47f671c343cea224def0afcd62a57a408ac0e36b79cf29a4495ff9055ca0c3da71d14030daf8fb9157ec84f077df97dff395c1fcf8f04361e02aa1af36ff80").to_vec(),
        hex!("f8b1808080a038f5e1b2680d95eaf7f225b996fc482f60cabcebeae26f883a4b58e1e9c7bbeda0c220c5d76d85ad38d8f82d0d6d6f48db3c23ae3657d1ac3ca6e2d98b4e48bfde8080a06fe32c7c1f8f80ebe5128f11a7af3a5bc47dbc6ac0af705069532b1cbefd6792a0015eb7d24835c910fc5f906627968a1a9e810cb164afd634ca683b6bb34f0241808080808080a03ca1d0ead152d38c16bda91dac49e3f0c9a0afeaa67598c1fce2506f5f03162680").to_vec(),
        hex!("f86d9d3c3738deb88e49108e7a5bd83c14ad65b5ba598e2932551dc9b9ad1879b84df84b10874ef05b2fe9d8c8a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a0c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470").to_vec(),
    ];

    let root = H256(hex!(
        "024c056bc5db60d71c7908c5fad6050646bd70fd772ff222702d577e2af2e56b"
    ));

    let db = StorageProof::new(proof).into_memory_db::<KeccakHasher>();
    let trie = TrieDBBuilder::<EIP1186Layout<KeccakHasher>>::new(&db, &root).build();
    let result = trie.get(&key).unwrap().unwrap();

    // the raw account data stored in the state proof:
    let account = Account::decode(&Rlp::new(&result)).unwrap();

    // some assertions about the account data in the state root.
    assert_eq!(account.balance, U256::from(&hex!("4ef05b2fe9d8c8")[..]));
    assert_eq!(
        account.code_hash,
        H256::from(hex!(
            "c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
        ))
    );
    assert_eq!(
        account.storage_root,
        H256::from(hex!(
            "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421"
        ))
    );
    assert_eq!(account.nonce, 0x10);
}

#[test]
fn test_can_verify_eip_1186_storage_proofs_pt1() {
    // source?: https://freedium.cfd/https://medium.com/@chiqing/verify-ethereum-smart-contract-state-with-proof-1a8a0b4c8008
    let key: [u8; 32] = hex!("26cea30422618ab81af2eb015dca1e31cb79a6d5bdecbd8bbddcf53a6d902fc2");
    let proof = vec![
        hex!("f90131a0db84880ea6ca86b1065c9a2c61033daff2455d0e3a10867ff300b4863218a18aa07d7afd2ba5ad4c7085699c7505cf9cb67ea074b7116c7b2073f56736498e52d0a0150507169b2f23aa57226a33553af0684d7ee8ebfec67cbe90693640bfe94d19808080a04616444ecc68fd60c58a3705a3dbd7a178af8dbf50e2be26bf9b2e94e89db4a3a026e732b882408cd7b9e39ed706992d0526f0d60193f666181124e807baff6d7fa06512473128eb2f4b680fdcfd7e3d05ec0ad9bdccbfe10dbea0e8519945ce8df780a02cd9a8f9c26e2a581de890b50b387477748c69d7ddcbab84ec280e201ded7b4980a0b92bbcfcacad3b833b4d2a4993069af365b8ae1fb94abe5cd3f89d97ee911462a0f0be3262950058a03bc547c666135e195c9108f123de8111226f5938fbdfae8d808080").to_vec(),
        hex!("").to_vec(),
    ];

    let root = H256(hex!(
        "9276dd802bae68f79e2c91fe580a53599603818804ede9c7dab86eaae4e97eee"
    ));

    let db = StorageProof::new(proof).into_memory_db::<KeccakHasher>();
    let trie = TrieDBBuilder::<EIP1186Layout<KeccakHasher>>::new(&db, &root).build();
    let result = trie.get(&key).unwrap().unwrap();
}

#[test]
fn test_can_verify_eip_1186_storage_proofs_pt2() {
    // source?: https://github.com/vocdoni/storage-proofs-eth-go/blob/master/ethstorageproof/ethstorageproof_test.go
    let key: [u8; 32] = hex!("49c4c8b2db715e9f7e1d3306b9f6860a389635dfb3943db13f1005544a50fbb2");
    let proof = vec![
        // "0xf90211a0e62e1acc64b071fde44901c09efa7a2442bc053cdfe6c2e5c51d11437b84e7d6a08b2dd500665d24ba0cb1cc63b4fb635d41f628a865def35d4e9a27629ae6c68ca0ca19f1a8d953c9080295929903228cf57574f744902b48d900b24e4c4e319e43a03ea8dadbc9e76d1d720e290c0f1211482a6dc2f77db7d9acba92f173bf4d73b8a0c2950cd953d803e73c7c2752c5837ec44699bedd625ea3b003b22eeb97d94bfea098b6ddd236efe34f443f5e0a3cdedeef6c2eec5d6ca1391ee07929dff62755f1a0c61b4da5ef023198aacb6b6132bc250252e8541609bd370f3f5528fdb2e9481fa00dfe1436977f60f66464eef277d21981df06ba7e1425fd94581ca36eae0978aaa0c8dc83fad9c717ccd9d3afdd21ffe2164efcdf058d784f05996c1d4d48f9f9d1a08da439979f9c70448e6880ac8d34cb78387ab6cb830cc6b0d0b97cb19b0b58cca0a1581e43412fb1e9662eeab392beb663e67079aebf491518c2730e2bc59f4835a0a8c4b00430a704f07c784c49518d686f2ef826099ccba44b5be7c4744567b89ba0622320bab4969a7c89927492f9872f1762e1ac13d58c2174b06151ede9171000a024617e7256d67da2781d7edde08a3431a97a4ff154fd97abce8de67e0d3907aba0b60cc3dca2f93d40f3f21a6e2c8aefcbcf9f8c10523838194d56f511c8413b34a045851e88c0fee11b669fc8ca86957758f1c488078c69b7b810fc5c6342e284c580",
        // "0xf90211a0860feeaa8da3f512ab46dabdb891faaf1807ba240252274b5c5dfd731ead55f4a05bdc1e2b60be129264d8ecb1643dc35e0235eb721501b5d1ba6a471e2e7c1240a00cac1a0a8ad2a1013ac0fde58b345f9abc19a173c9e2249d1d7061551a41bc01a06555e5c377d477784085a54d62ecf6eb398d86afb2bfab9be3bbf6f1ee4f5590a00780251a4e9fc5f8cd636bcca2b7c684d0aed9e452062c05acbae34b9c732321a0fba7dd1482a2148c7bfa7a5fc0f383ebe005a8e295486f38a589b4a30ef379a2a031f0d9fd5f641b7aef0e8e08fe2da526bcb98a6e933bed1d1339515c112a8c24a0fc2bd1942e5852aa6b4a08c6156d598d157e2062857280fad1d45207ad294e6ea09578d621e51ada5bba3087279e76c906f4b3efc11c5b42580d09168873993a7da0f1f328145fd7be1c82f3fc524e8954ad817552f872aa8bec1ee1cd3e5a2022b4a00e396b47ec153b6372627c1505dce3ce741035660bebb63c2f578adc392efb92a09de1cbc4e13a886c9c72d65e89fcc1608c02f4ab3421b02c223af8ce60916d37a0f09d7d3bbf38403dcb674f5723f6ce2d5a6a84870f6efb513217be126dd15366a055f428565f2065c798319f615381954caa42d25d838beba4fffa9f80e1ef828ba06b528398dfa6087a2e0c2d267eb6d100b891772af45015df1ae4c9e3480af69fa06d668aae28e38f21aa22f8129a5bed8554ffdb39d05b0f5ccecb4be126c6571180",
        // "0xf90211a0731b9f54cd38335a6d2ef9463c73a847e9834a60a4d9e3b76c6137f2d16a5004a06aba38c58f4de79b5251f81ff5ca0de4ecd49f2ada694c467d78681c28c55ccda0ea63ebace8764b5c6d46a6c1995fa9d94b284b7d307576f1226719bc8a94737da04c2306e7fe2e74dcac5c9e5e8bf617ec097b6b4aabc7a27b469b72656580ca2ba0967df259734d12946e1fa18f32614b99e3fcb789db19ff023ec886bc16badd7aa01f0e86c3ecb93adc678748ed4518d23d12ef61ec532e90c7222589aecd626edda097d7e9c04db1a801dc0ce2a193a5a2702e816905a4620dd50d82b61619257563a025f5e3041a52b1cca05cbfad0f79d35d9dd852af284d13c67f56067df254d288a095d846cfcf2ea1f9ee9faf9363835c02b2a6b2d8eb71e10d20afd6932753473ea0c4a7c2d6bb8e22469d831be708ae9f182ff94eecd019c82b99a176e251b1af17a0e42b47e7c3ee9fe201c42c9d0f9664135688ed574a824410bc42bcf93f608cdda0f610da1d7b11d1fa870246171a4cf26afc6f69a1965ba2a41921939542dced67a011e9851ba26fc6f162a3f12189bcf665ead7d138f816268a23d2bb6264c2d813a05ac5a8730b4271119e4873be5fedca2e5f1ded84aa6746d6ea89a38afae785eda082b3d2eac9a325ac22e264169f58f1b9fa803db85592e66625557c2ce97190b2a0b2c1e2ed4ff26320497c7c6fc4a76fd6f8c4d2e2c2ca330454a93be0d0876ea680",
        // "0xf90211a0d22bf91874b3d45ca94cee5c4210d9f5b24fb3f03a9a35f2fe36dfea4537f6dfa0420cbe25b9124aa27869c1b68c8fce40a2296218fa62940e39d3eb7c7fdc8317a0716f79b13a07e6b69d0deb3727f8107482b0218eb35e8a0106dd7088b0ad4ca7a03064266303865f34d7f22c206a8d350f700932bc1f7ea4219f32a8a4c4b140efa03dab7936da1b5b4d613c51f9d71bf4e127b95e7f75e4c35581ab1bf7f2687109a0722f339e6e8eed2a4352581ce876a3de7bf7911f6d602b0b6d462cafa36f6854a09443c709e573c5a4b3ad8059440b7dda92b6ff3300aacb268532b1afd1a4dc81a054f916991e0cff532fb643bc7ffe3821060accedfe15962ede787529a5d8b030a0e4b48d88444920d1fc3b7b018f5c7a7f17c5a8240babf522a3950bbb5ba363e5a0fd76d2060eaedcfe20190525f7affbb87cac5565e4d3c921b22c41d2bdc20007a0539b1e1765734b07fa5deb989d3fed1a60ffbe7bb7cfe5da062aadeedc3cb61ea06e531ac45644b01649c0d5e71995c4af5ee94ca94ef1cc67eb9de338015dcf93a093ef683145c52c81021f4e663b1f9b1964bb945d1a404fc3a869931d65a0744da0d8e07d38b5a23a570314029e7f915c0be9b534a3f6c91a3cfa2881a71d4024b0a01edcd31a8a97ed0f7472c926d7f85b772f1d743b2daeaf933d04230acbb867caa0fb9214798aebb7edb921f53be4de50fdf13cb81d765d07d2daff177d4c3a73ec80",
        // "0xf8f1a0ceccff816a886b06d94bca3b53df877952ce900d7ac7c8358f1e98f26ac495b3a0a716f78e3e95bd4afcedb841bde324ed0409fd1558d38cf0fac414482af2947e808080a0f06845ee91d07ae23d31d519747ffac44c63484774e65c127456af81625da496a0358c4482854960c58c8fd44ea0d5286dc9b4a8f231db373678fa8b7809abb32fa0e820cf4ba798c2032313f81cbcb76f180f0e4a18ca0628277742520793a568b9a099cd28647efb126988ff2fbf7f4cf06ac13102a76c068e50ee2ddc1fdbf706b78080a0539eeefa1bf495aec1010701dab11ee27b90a7f25bbbaad6fbd8e9c60849a7a48080808080",
        // "0xe89e3d637bfb05fd0393af2b1e03c3b0e0489e8bcd9cc6a506d57e7df4b1ef698887014e95f5a48100"
        hex!("f90211a0e62e1acc64b071fde44901c09efa7a2442bc053cdfe6c2e5c51d11437b84e7d6a08b2dd500665d24ba0cb1cc63b4fb635d41f628a865def35d4e9a27629ae6c68ca0ca19f1a8d953c9080295929903228cf57574f744902b48d900b24e4c4e319e43a03ea8dadbc9e76d1d720e290c0f1211482a6dc2f77db7d9acba92f173bf4d73b8a0c2950cd953d803e73c7c2752c5837ec44699bedd625ea3b003b22eeb97d94bfea098b6ddd236efe34f443f5e0a3cdedeef6c2eec5d6ca1391ee07929dff62755f1a0c61b4da5ef023198aacb6b6132bc250252e8541609bd370f3f5528fdb2e9481fa00dfe1436977f60f66464eef277d21981df06ba7e1425fd94581ca36eae0978aaa0c8dc83fad9c717ccd9d3afdd21ffe2164efcdf058d784f05996c1d4d48f9f9d1a08da439979f9c70448e6880ac8d34cb78387ab6cb830cc6b0d0b97cb19b0b58cca0a1581e43412fb1e9662eeab392beb663e67079aebf491518c2730e2bc59f4835a0a8c4b00430a704f07c784c49518d686f2ef826099ccba44b5be7c4744567b89ba0622320bab4969a7c89927492f9872f1762e1ac13d58c2174b06151ede9171000a024617e7256d67da2781d7edde08a3431a97a4ff154fd97abce8de67e0d3907aba0b60cc3dca2f93d40f3f21a6e2c8aefcbcf9f8c10523838194d56f511c8413b34a045851e88c0fee11b669fc8ca86957758f1c488078c69b7b810fc5c6342e284c580").to_vec(),
        hex!("f90211a0860feeaa8da3f512ab46dabdb891faaf1807ba240252274b5c5dfd731ead55f4a05bdc1e2b60be129264d8ecb1643dc35e0235eb721501b5d1ba6a471e2e7c1240a00cac1a0a8ad2a1013ac0fde58b345f9abc19a173c9e2249d1d7061551a41bc01a06555e5c377d477784085a54d62ecf6eb398d86afb2bfab9be3bbf6f1ee4f5590a00780251a4e9fc5f8cd636bcca2b7c684d0aed9e452062c05acbae34b9c732321a0fba7dd1482a2148c7bfa7a5fc0f383ebe005a8e295486f38a589b4a30ef379a2a031f0d9fd5f641b7aef0e8e08fe2da526bcb98a6e933bed1d1339515c112a8c24a0fc2bd1942e5852aa6b4a08c6156d598d157e2062857280fad1d45207ad294e6ea09578d621e51ada5bba3087279e76c906f4b3efc11c5b42580d09168873993a7da0f1f328145fd7be1c82f3fc524e8954ad817552f872aa8bec1ee1cd3e5a2022b4a00e396b47ec153b6372627c1505dce3ce741035660bebb63c2f578adc392efb92a09de1cbc4e13a886c9c72d65e89fcc1608c02f4ab3421b02c223af8ce60916d37a0f09d7d3bbf38403dcb674f5723f6ce2d5a6a84870f6efb513217be126dd15366a055f428565f2065c798319f615381954caa42d25d838beba4fffa9f80e1ef828ba06b528398dfa6087a2e0c2d267eb6d100b891772af45015df1ae4c9e3480af69fa06d668aae28e38f21aa22f8129a5bed8554ffdb39d05b0f5ccecb4be126c6571180").to_vec(),
        hex!("f90211a0731b9f54cd38335a6d2ef9463c73a847e9834a60a4d9e3b76c6137f2d16a5004a06aba38c58f4de79b5251f81ff5ca0de4ecd49f2ada694c467d78681c28c55ccda0ea63ebace8764b5c6d46a6c1995fa9d94b284b7d307576f1226719bc8a94737da04c2306e7fe2e74dcac5c9e5e8bf617ec097b6b4aabc7a27b469b72656580ca2ba0967df259734d12946e1fa18f32614b99e3fcb789db19ff023ec886bc16badd7aa01f0e86c3ecb93adc678748ed4518d23d12ef61ec532e90c7222589aecd626edda097d7e9c04db1a801dc0ce2a193a5a2702e816905a4620dd50d82b61619257563a025f5e3041a52b1cca05cbfad0f79d35d9dd852af284d13c67f56067df254d288a095d846cfcf2ea1f9ee9faf9363835c02b2a6b2d8eb71e10d20afd6932753473ea0c4a7c2d6bb8e22469d831be708ae9f182ff94eecd019c82b99a176e251b1af17a0e42b47e7c3ee9fe201c42c9d0f9664135688ed574a824410bc42bcf93f608cdda0f610da1d7b11d1fa870246171a4cf26afc6f69a1965ba2a41921939542dced67a011e9851ba26fc6f162a3f12189bcf665ead7d138f816268a23d2bb6264c2d813a05ac5a8730b4271119e4873be5fedca2e5f1ded84aa6746d6ea89a38afae785eda082b3d2eac9a325ac22e264169f58f1b9fa803db85592e66625557c2ce97190b2a0b2c1e2ed4ff26320497c7c6fc4a76fd6f8c4d2e2c2ca330454a93be0d0876ea680").to_vec(),
        hex!("f90211a0d22bf91874b3d45ca94cee5c4210d9f5b24fb3f03a9a35f2fe36dfea4537f6dfa0420cbe25b9124aa27869c1b68c8fce40a2296218fa62940e39d3eb7c7fdc8317a0716f79b13a07e6b69d0deb3727f8107482b0218eb35e8a0106dd7088b0ad4ca7a03064266303865f34d7f22c206a8d350f700932bc1f7ea4219f32a8a4c4b140efa03dab7936da1b5b4d613c51f9d71bf4e127b95e7f75e4c35581ab1bf7f2687109a0722f339e6e8eed2a4352581ce876a3de7bf7911f6d602b0b6d462cafa36f6854a09443c709e573c5a4b3ad8059440b7dda92b6ff3300aacb268532b1afd1a4dc81a054f916991e0cff532fb643bc7ffe3821060accedfe15962ede787529a5d8b030a0e4b48d88444920d1fc3b7b018f5c7a7f17c5a8240babf522a3950bbb5ba363e5a0fd76d2060eaedcfe20190525f7affbb87cac5565e4d3c921b22c41d2bdc20007a0539b1e1765734b07fa5deb989d3fed1a60ffbe7bb7cfe5da062aadeedc3cb61ea06e531ac45644b01649c0d5e71995c4af5ee94ca94ef1cc67eb9de338015dcf93a093ef683145c52c81021f4e663b1f9b1964bb945d1a404fc3a869931d65a0744da0d8e07d38b5a23a570314029e7f915c0be9b534a3f6c91a3cfa2881a71d4024b0a01edcd31a8a97ed0f7472c926d7f85b772f1d743b2daeaf933d04230acbb867caa0fb9214798aebb7edb921f53be4de50fdf13cb81d765d07d2daff177d4c3a73ec80").to_vec(),
        hex!("f8f1a0ceccff816a886b06d94bca3b53df877952ce900d7ac7c8358f1e98f26ac495b3a0a716f78e3e95bd4afcedb841bde324ed0409fd1558d38cf0fac414482af2947e808080a0f06845ee91d07ae23d31d519747ffac44c63484774e65c127456af81625da496a0358c4482854960c58c8fd44ea0d5286dc9b4a8f231db373678fa8b7809abb32fa0e820cf4ba798c2032313f81cbcb76f180f0e4a18ca0628277742520793a568b9a099cd28647efb126988ff2fbf7f4cf06ac13102a76c068e50ee2ddc1fdbf706b78080a0539eeefa1bf495aec1010701dab11ee27b90a7f25bbbaad6fbd8e9c60849a7a48080808080").to_vec(),
        hex!("e89e3d637bfb05fd0393af2b1e03c3b0e0489e8bcd9cc6a506d57e7df4b1ef698887014e95f5a48100").to_vec(),
    ];

    let root = H256(hex!(
        "a9302463fd528ce8aca2d5ad58de0622f07e2107c12a780f67c624592bbcc13d"
    ));

    let db = StorageProof::new(proof).into_memory_db::<KeccakHasher>();
    let trie = TrieDBBuilder::<EIP1186Layout<KeccakHasher>>::new(&db, &root).build();
    let result = trie.get(&key).unwrap().unwrap();
}